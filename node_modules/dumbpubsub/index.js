var events = require('events');
var util = require('util');
var _ = require('underscore');

var DumbPubSub = function() {
    events.EventEmitter.call(this);
    var self = this;

    self.server = null;

    self.attach = function(server) {
        self.server = server;
    };

    self.subscriptions = {
        'client-update': [
            'http://localhost/x',
            'http://localhost/y',
        ],
        'client-delete': [
            'http://localhost/x',
        ],
    };

    /**
     * Begins listening on the provided root URL
     * root ~= /subscribe
     */
    self.listen = function(root) {

        /**
         * GET /subscribe
         * Returns all subscriptions
         * Example: [ { 'event': 'a', 'url': 'y' }, { 'event': 'b', 'url': 'y' } ] || []
         *
         * GET /subscribe?event=client-delete
         * Returns all subscriptions listening for client-delete
         * Example: [ { 'event': 'X', 'url': 'y' }, { 'event': 'X', 'url': 'y' } ] || []
         *
         * GET /subscribe?event=client-delete&url=http://localhost/listener
         * Returns all subscriptions listening for client-delete on this URL (1 or 0)
         * Example: [ { 'event': 'X', 'url': 'y' } ] || []
         */
        self.server.get(root, function(req, res) {
            // Read 'event' and 'url' get params
            var requestedEvent = req.query.event;
            if (!requestedEvent) {
                var parsedData = [];
                _.each(self.subscriptions, function(urls, eventName) {
                    _.each(urls, function(url) {
                        parsedData.push({
                            'event': eventName,
                            'url': url
                        });
                    });
                });
                res.send(parsedData);
                return;
            }

            var url = req.query.url || null;
            var event = self.subscriptions[requestedEvent];

            if (!event) {
                // We got an event from the user, but we don't have any URLs subscribing to it
                res.send([]);
                return;
            } else if (event && !url) {
                // User asked for a real event, and didn't ask for a specific URL
                var parsedData = [];
                _.each(event, function(url) {
                    parsedData.push({
                        'event': requestedEvent,
                        'url': url
                    });
                });
                res.send(parsedData);
                return;
            } else if (event && url) {
                // User is basically checking to see if they registered a specific callback
                var found = false;
                _.each(event, function(x) {
                    if (x === url) {
                        res.send({
                            'event': requestedEvent,
                            'url': url
                        });
                        found = true;
                        return;
                    }
                });
                if (!found) {
                    res.send([]);
                }
            }
        });

        self.server.delete(root, function(req, res) {
            // read 'event' and 'url' something params
            console.log('event', req.body.event);
            console.log('url', req.body.url);
            res.send('deleted');
        });

        self.server.post(root, function(req, res) {
            // read 'event' and 'url' post params
            res.send('added');
        });
    };

    self.restore = function(dataStore) {
        // read old entries from disk
    };

    self.subscribe = function(event, url) {
        // Adds event to data store
    };
};

util.inherits(DumbPubSub, events.EventEmitter);
module.exports = new DumbPubSub();
